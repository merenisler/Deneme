<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>361, 17</value>
  </metadata>
  <data name="ımageList3.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAlAgAAAJNU0Z0AUkBTAMBAQAB
        WAEAAVgBAAEaAQABGQEABP8BIQEACP8BQgFNATYHAAE2AwABKAMAAWgDAAEZAwABAQEAASAFAAGgASgW
        AAMUARsDTQGTA2oB6gNPAZcDGAEhBAIwAAQBAxMBGgNJAYYDaQHoA1IBoQMcAScEAv8AOQADFgEeA1EB
        nwOkAf4DugH/A4sB9wNRAZ8DHQEoBAIoAAQBAxYBHgNMAY8DgQH1A7oB/wOkAf4DVgGrAx4BK/8AOQAD
        UgGjA6QB/gO6Af8DugH/A7oB/wOLAfcDUwGlAx0BKQQBJAADFQEcA08BmQOBAfYDugH/A7oB/wO6Af8D
        pAH+A1YBrv8AOQADYwHfA7oB/wO6Af8DugH/A7oB/wO6Af8DkAH5A1cBsgMaASQgAAMTARkDVAGoA5IB
        +AO6Af8DugH/A7oB/wO6Af8DugH/A2UB4/8AOQADMAFLA3EB7QO6Af8DugH/A7oB/wO6Af8DugH/A5kB
        +wNcAcQDFwEfGAADFAEbA1oBugOdAfoDugH/A7oB/wO6Af8DugH/A7oB/wNzAfADOQFd/wA5AAQCAy0B
        RQNwAe0DugH/A7oB/wO6Af8DugH/A7oB/wOjAf4DYgHXAxgBIBAAAxUBHANaAcIDtwH9A7oB/wO6Af8D
        ugH/A7oB/wO6Af8DcwHvAzcBWgMGAQf/AD0AAwMBBAMwAUsDYwHfA7gB/QO6Af8DugH/A7oB/wO6Af8D
        owH+A2EBzwMhAS8DAgEDBAIDHQEoA1kBuwObAfwDugH/A7oB/wO6Af8DugH/A6MB/gNoAeQDOQFfAwYB
        CP8ARQADBgEHAzMBUANeAdIDnQH8A7oB/wO6Af8DugH/A7oB/wOdAfwDXAHGAysBQgMnAToDWQG2A5wB
        +gO6Af8DugH/A7oB/wO6Af8DtwH9A2MB2gM6AWEDCAEK/wBNAAMGAQgDMwFQA18BywObAfwDugH/A7oB
        /wO6Af8DugH/A5kB+wNfAdADXQHHA5sB+gO6Af8DugH/A7oB/wO6Af8DtwH9A2EB1gM5AV4DCAEK/wBV
        AAMGAQcDMAFKA10BygOdAfwDugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A6MB
        /gNhAdgDNQFVAwcBCf8AXQADBQEGAykBPgNhAc8DogH+A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A7oB
        /wO6Af8DugH/A2YB4AMuAUcDBgEH/wBlAAQCAyABLQNjAdoDugH/A7oB/wO6Af8DugH/A7oB/wO6Af8D
        ugH/A7oB/wNrAekDIwEzAwIBA/8AbQADAgEDAzQBVAO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8D
        ugH/AzoBYQMCAQP/AG0AAwYBBwMuAUcDZgHgA7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8D
        cAHtAzMBUAMGAQj/AGUAAwcBCQM1AVUDYQHYA6MB/gO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8D
        ugH/A7oB/wNqAeYDOgFhAwkBC/8AXQADCAEKAzkBXgNhAdYDtwH9A7oB/wO6Af8DugH/A7oB/wO6Af8D
        ugH/A7oB/wO6Af8DugH/A7oB/wOjAf4DZwHhAz8BbAMKAQ3/AFUAAwgBCgM6AWEDYwHaA7cB/QO6Af8D
        ugH/A7oB/wO6Af8DnAH6A1wBwwNaAbcDkgH4A7oB/wO6Af8DugH/A7oB/wOjAf4DZwHiA0IBcgMKAQ3/
        AE0AAwYBCAM5AV8DaAHkA6MB/gO6Af8DugH/A7oB/wO6Af8DmwH8A1kBuwMeASoDGgEkA1QBqAOQAfkD
        ugH/A7oB/wO6Af8DugH/A6MB/gNsAekDQgFzAwkBDP8ARQADBgEHAzcBWgNzAe8DugH/A7oB/wO6Af8D
        ugH/A7oB/wO3Af0DWgHCAxUBHAgAAxIBGANVAa0DkQH5A7oB/wO6Af8DugH/A7oB/wO6Af8DewHyA0AB
        bwMJAQz/AD0AAwYBCAM6AWADcwHwA7oB/wO6Af8DugH/A7oB/wO6Af8DnQH6A1oBugMUARsQAAMSARcD
        UwGnA5IB+AO6Af8DugH/A7oB/wO6Af8DugH/A3sB8gNCAXIDDAEQ/wA5AAM9AWcDewHxA7oB/wO6Af8D
        ugH/A7oB/wO6Af8DkgH4A1QBqAMTARkYAAMRARYDUQGcA4sB9wO6Af8DugH/A7oB/wO6Af8DugH/A38B
        8wNDAXb/ADkAA2UB4wO6Af8DugH/A7oB/wO6Af8DugH/A4EB9gNPAZkDFQEcIAADDgESA0sBjAOBAfUD
        ugH/A7oB/wO6Af8DugH/A7oB/wNqAeb/ADkAA0sBjAOkAf4DugH/A7oB/wO6Af8DgQH1A0wBjwMWAR4E
        ASQAAw8BFANGBH8B8wO6Af8DugH/A7oB/wOkAf4DTwGZ/wA5AAMMAQ8DSQGIA6QB/gO6Af8DgwH1A0sB
        jAMTARoEASwAAw8BEwNEAXkDfwHzA7oB/wOkAf4DTgGYAxQBG/8APQADCQELA0YBfwNqAeYDSQGGAw0B
        ETgAAwkBDANCAXIDZQHjA0wBkAMQARX/AD0AAUIBTQE+BwABPgMAASgDAAFoAwABGQMAAQEBAAEBBQAB
        kAEBFgAD/wEAAYEB/wHgDgAB/wHADgABfwHADgABfwGADgABPw8AAR4OAAGAAgABQAwAAcACAAHADAAB
        4AEAAQEBwAwAAfABAAEDAcAMAAH4AQABBwHADAAB/AEAAQ8BwAwAAf4BAAEfAcAMAAH8AQABDwHADAAB
        +AEAAQcBwAwAAfABAAEDAcAMAAHgAQABAQHADAABwAIAAcAMAAGAAQwBAAFADQABHg8AAT8PAAF/AYAO
        AAF/AcAOAAH/AeANAAGDAf8B8AFADAAL
</value>
  </data>
</root>