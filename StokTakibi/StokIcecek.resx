<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>361, 17</value>
  </metadata>
  <data name="ımageList3.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAXAgAAAJNU0Z0AUkBTAMBAQAB
        kAEAAZABAAEZAQABGQEABP8BIQEACP8BQgFNATYHAAE2AwABKAMAAWQDAAEZAwABAQEAASAFAAEQAScW
        AAMYASADUQGeA2UB5wNFAXwDDwETNAADBwEJAzwBZANjAeQDVwGyAyEBMAQC/wAtAAMWAR4DUgGjA5YB
        /gO6Af8DdQH0A0cBgAMMARAsAAMJAQsDPgFqA3AB8QO6Af8DlgH+A1cBtQMhATD/AC0AA1IBowOWAf4D
        ugH/A7oB/wO6Af8DcAH1A0kBiAMNAREkAAMLAQ4DQwF2A3AB8wO6Af8DugH/A7oB/wOWAf4DVwGy/wAt
        AANjAd8DugH/A7oB/wO6Af8DugH/A7oB/wN2AfYDTQGRAw4BEhwAAwsBDgNFAXwDagHsA7oB/wO6Af8D
        ugH/A7oB/wO6Af8DYwHk/wAtAAMwAUsDaQHuA7oB/wO6Af8DugH/A7oB/wO6Af8DcQHzA00BkwMOARIU
        AAMKAQ0DRAF6A2cB6gOWAf4DugH/A7oB/wO6Af8DugH/A3AB8QM8AWT/AC0ABAIDMQFNA2cB7wO6Af8D
        ugH/A7oB/wO6Af8DugH/A3EB9QNLAY0DDAEPDAADBwEJA0EBcANpAfADuQH/A7oB/wO6Af8DugH/A7oB
        /wNwAfMDPgFqAwcBCf8AMQADBQEGAzcBWgNmAeUDlQH+A7oB/wO6Af8DugH/A7oB/wNxAfUDSAGDAw8B
        EwQAAwcBCQM9AWgDcQHyA7oB/wO6Af8DugH/A7oB/wOWAf4DagHsA0MBdgMJAQv/ADkAAwcBCQM8AWQD
        YQHeA5QB/gO6Af8DugH/A7oB/wO6Af8DdQH0A0cBgAMVARwDPgFpA3AB8QO6Af8DugH/A7oB/wO6Af8D
        uQH/A2cB6gNFAXwDCwEO/wBBAAMJAQsDPARmAeADuQH/A7oB/wO6Af8DugH/A7oB/wN1AfQDUgGjA3EB
        8gO6Af8DugH/A7oB/wO6Af8DugH/A2kB8ANEAXoDCwEO/wBJAAMIAQoDOgFgA2wB6wO6Af8DugH/A7oB
        /wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A3EB8gNBAXADCgEN/wBRAAMGAQgDNAFTA2kB
        7gO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wNwAfEDPQFoAwcBCf8AWQADAgEDAzEB
        TANpAe4DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A3EB8gM+AWkDBwEJ/wBhAAMLAQ4DSgGJA7oB
        /wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wNSAaMDFQEc/wBhAAMHAQkDPQFoA3AB8QO6Af8DugH/A7oB
        /wO6Af8DugH/A7oB/wO6Af8DdQH0A0cBgAMPARP/AFkAAwoBDQNBAXADcQHyA7oB/wO6Af8DugH/A7oB
        /wO6Af8DugH/A7oB/wO6Af8DugH/A3UB9ANIAYMDDAEP/wBRAAMLAQ4DRAF6A2kB8AO6Af8DugH/A7oB
        /wO6Af8DugH/A7oB/wO6Af8DugH/A7oB/wO6Af8DugH/A3EB9QNLAY0DDgES/wBJAAMLAQ4DRQF8A2cB
        6gO5Af8DugH/A7oB/wO6Af8DugH/A3AB8QNKAYkDaQHuA7oB/wO6Af8DugH/A7oB/wO6Af8DcQH1A00B
        kwMOARL/AEEAAwkBCwNDAXYDagHsA5YB/gO6Af8DugH/A7oB/wO6Af8DcQHyAz0BaAMLAQ4DMQFMA2kB
        7gO6Af8DugH/A7oB/wO6Af8DugH/A3EB8wNNAZEDDQER/wA5AAMHAQkDPgFqA3AB8wO6Af8DugH/A7oB
        /wO6Af8DuQH/A2kB8ANBAXADBwEJBAADAgEDAzQBUwNsAesDuQH/A7oB/wO6Af8DugH/A7oB/wN2AfYD
        SQGIAwwBEP8AMQADBgEIAz0BZwNwAfEDugH/A7oB/wO6Af8DugH/A5YB/gNnAeoDRAF6AwoBDQwAAwYB
        CAM6AWADZgHgA5QB/gO6Af8DugH/A7oB/wO6Af8DcAH1A0cBgAMPARP/AC0AAz0BZwNxAfIDugH/A7oB
        /wO6Af8DugH/A7oB/wNqAewDRQF8AwsBDhQAAwgBCgM8AWYDYQHeA5UB/gO6Af8DugH/A7oB/wO6Af8D
        dQH0A0UBfP8ALQADZQHjA7oB/wO6Af8DugH/A7oB/wO6Af8DcAHzA0MBdgMLAQ4cAAMJAQsDPAFkA2YB
        5QO6Af8DugH/A7oB/wO6Af8DugH/A2UB5/8ALQADSwGMA5YB/gO6Af8DugH/A7oB/wNwAfEDPgFqAwkB
        CyQAAwcBCQM3AVoDZwHvA7oB/wO6Af8DugH/A5YB/gNRAZ7/AC0AAwwBDwNMAY4DlgH+A7oB/wNxAfID
        PQFnAwcBCSwAAwUBBgMxAU0DaQHuA7oB/wOWAf4DUgGjAxgBIP8AMQADDAEPA0sBjANlAeMDPQFnAwYB
        CDQABAIDMAFLA2MB3wNSAaMDFgEe/wAxAAFCAU0BPgcAAT4DAAEoAwABZAMAARkDAAEBAQABAQUAAZAB
        ARYAA/8BAAGDAf8B4A0AAQEB/wHADgAB/wGADgABfw8AAT4PAAEcDgABgAEIAQABgAwAAcABAAEBAYAM
        AAHgAQABAwGADAAB8AEAAQcBgAwAAfgBAAEPAYAMAAH8AQABHwGADAAB/gEAAT8BgAwAAfwBAAEfAYAM
        AAH4AQABDwGADAAB8AEAAQcBgAwAAeABAAEDAYAMAAHAAQABAQGADAABgAEIAQABgA0AARwPAAE+DwAB
        fw8AAf8BgA0AAQEB/wHADQABgwH/AeABgAwACw==
</value>
  </data>
</root>